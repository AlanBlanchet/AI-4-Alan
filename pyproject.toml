[tool.poetry]
authors = ["Alan Blanchet <alan@alan-blanchet.fr>"]
description = ""
license = "MIT"
name = "ai-4-alan"
packages = [
  { include = "ai", from = "src" },
  { include = "back", from = "src" },
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
attrs = "^23.1.0"
click = "^8.1.7"
numpy = "^1.26.2"
easydict = "^1.11"
random-word = "^1.0.11"
moviepy = "^1.0.3"
urllib3 = "<2"
nbformat = ">=4.2.0"
lapx = "^0.5.7"
# UI/VIZ
gradio = "^4.19.2"
fiftyone = "^0.23.6"
graphviz = "^0.20.1"
seaborn = "^0.13.1"
tqdm = "^4.66.1"
umap-learn = "^0.5.5"
# Backend
fastapi = "^0.110.3"
graphene = "^3.3"
graphene-sqlalchemy = "v3.0.0rc1"
pydantic = "^2.7.1"
sqlalchemy = "^2.0.29"
# ML
albumentations = "^1.3.1"
tensorboardx = "^2.6.2.2"
tensorboard = "^2.15.1"
transformers = "^4.38.2"
datasets = "^2.18.0"
tiktoken = "^0.6.0"
scikit-learn = "^1.4.0"
# RL
ale-py = "^0.8.1"
gymnasium = { extras = [
  "classic-control",
  "box2d",
  "accept-rom-license",
  "atari",
], version = "^0.29.1" }
# Torch
# WHL : https://download.pytorch.org/whl/cu121/
torch = { url = "https://download.pytorch.org/whl/cu121/torch-2.1.2%2Bcu121-cp311-cp311-linux_x86_64.whl" }
torchvision = { url = "https://download.pytorch.org/whl/cu121/torchvision-0.16.2%2Bcu121-cp311-cp311-linux_x86_64.whl" }
torchmetrics = "^1.2.1"
lightning = "^2.2.5"
einops = "^0.7.0"
# MMlab
# WHL : https://download.openmmlab.com/mmcv/dist/cu121/torch2.1.0/index.html
mmcv = { url = "https://download.openmmlab.com/mmcv/dist/cu121/torch2.1.0/mmcv-2.1.0-cp311-cp311-manylinux1_x86_64.whl" }
openmim = "^0.3.9"
mmdet = ">=3.1.0"
mmocr = "^1.0.1"
mmsegmentation = "^1.2.2"
mmdeploy = "^1.3.1"
mmrotate = { git = "https://github.com/open-mmlab/mmrotate.git", branch = "1.x" }
mmagic = "^1.2.0"
mmpretrain = "^1.2.0"
starlette-graphene3 = "^0.6.0"
pytorch-model-summary = "^0.1.2"
timm = "^1.0.3"
opencv-python = "^4.10.0.82"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.28.0"
pytest = "^7.4.3"
maturin = "^1.5.1"

[tool.poetry.scripts]
ai = "ai.cli.ai:main"

[tool.maturin]
module-name = "src.ai.rust"
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
markers = ["model", "dataset"]
filterwarnings = "ignore::DeprecationWarning"

[build-system]
requires = ["poetry-core", "maturin>=1.0,<2.0"]
build-backend = "maturin"
